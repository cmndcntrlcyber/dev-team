version: '3.8'

services:
  app:
    build: .
    restart: unless-stopped
    ports:
      - "5000:5000"
    depends_on:
      - postgres
      - redis
    environment:
      NODE_ENV: production
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/attack_node
      REDIS_URL: redis://redis:6379
    volumes:
      - ./uploads:/app/uploads
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - attack-node

  postgres:
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_DB: attack_node
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - attack-node
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - attack-node
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - attack-node

  # Security Tools
  attacknode-kali:
    image: kasmweb/kali-rolling-desktop:develop
    restart: unless-stopped
    ports:
      - "6902:6901"
    environment:
      VNC_PW: password
      KASM_USER: root
      KASM_UID: 0
      KASM_GID: 0
    volumes:
      - ./uploads/kasm_profiles/kali-root:/home/kasm-user:rw
      - ./uploads/docker:/home/kasm-user/shared:rw
    privileged: true
    cap_add:
      - SYS_ADMIN
    shm_size: 512m
    hostname: kasm
    networks:
      - attack-node
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6901/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  attacknode-vscode:
    image: kasmweb/vs-code:1.17.0
    restart: unless-stopped
    ports:
      - "6903:6901"
    environment:
      VNC_PW: password
    volumes:
      - ./uploads/docker:/home/kasm-user/shared:rw
    shm_size: 512m
    networks:
      - attack-node
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6901/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  empire-data:
    image: bcsecurity/empire:latest
    restart: "no"
    volumes:
      - empire_data:/empire
    command: ["true"]
    networks:
      - attack-node

  attacknode-empire:
    image: bcsecurity/empire:latest
    restart: unless-stopped
    ports:
      - "1337:1337"
      - "5000:5000"
    volumes_from:
      - empire-data
    depends_on:
      - empire-data
    stdin_open: true
    tty: true
    networks:
      - attack-node
    healthcheck:
      test: ["CMD", "pgrep", "-f", "empire"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  attacknode-maltego:
    image: kasmweb/maltego:1.17.0-rolling-daily
    restart: unless-stopped
    ports:
      - "6904:6901"
    environment:
      VNC_PW: password
    shm_size: 512m
    networks:
      - attack-node
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6901/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  attack-node:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  empire_data:
