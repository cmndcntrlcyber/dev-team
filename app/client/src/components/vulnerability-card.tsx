import { Card, CardContent } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { formatDistanceToNow } from "date-fns";
import { type Vulnerability } from "@shared/schema";

interface VulnerabilityCardProps {
  vulnerability: Vulnerability;
  onSelect?: (vulnerability: Vulnerability) => void;
}

const severityColors = {
  P1: "bg-error/10 text-error",
  P2: "bg-warning/10 text-warning", 
  P3: "bg-primary/10 text-primary",
  P4: "bg-success/10 text-success"
};

const severityDots = {
  P1: "bg-error",
  P2: "bg-warning",
  P3: "bg-primary", 
  P4: "bg-success"
};

export default function VulnerabilityCard({ vulnerability, onSelect }: VulnerabilityCardProps) {
  const handleClick = () => {
    if (onSelect) {
      onSelect(vulnerability);
    }
  };

  return (
    <Card 
      className="bg-card border-gray-700 hover:bg-gray-600 cursor-pointer transition-colors"
      onClick={handleClick}
    >
      <CardContent className="p-4">
        <div className="flex items-center justify-between">
          <div className="flex items-center">
            <div className={`w-2 h-2 rounded-full mr-3 ${severityDots[vulnerability.severity as keyof typeof severityDots]}`} />
            <div>
              <p className="font-medium text-gray-100">{vulnerability.title}</p>
              <p className="text-sm text-gray-400">
                {formatDistanceToNow(new Date(vulnerability.submittedAt), { addSuffix: true })}
              </p>
            </div>
          </div>
          <div className="flex items-center">
            <Badge 
              variant="secondary" 
              className={`${severityColors[vulnerability.severity as keyof typeof severityColors]} px-2 py-1 text-xs font-medium`}
            >
              {vulnerability.severity}
            </Badge>
            {vulnerability.reward && (
              <span className="ml-3 text-gray-400">
                ${parseFloat(vulnerability.reward).toLocaleString()}
              </span>
            )}
          </div>
        </div>
      </CardContent>
    </Card>
  );
}
